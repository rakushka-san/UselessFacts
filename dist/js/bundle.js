(()=>{"use strict";var e,t,n,r={469:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ApiService=void 0,t.ApiService=function(){function e(){}return e.getFact=function(){return fetch(this.URL).then((function(e){return e.json()})).then((function(e){return e.text}))},e.URL="https://uselessfacts.jsph.pl/api/v2/facts/random",e}()},671:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.print=void 0,t.print=function(e,t,n,r){var i=0,o=setInterval((function(){i===t.length-1&&(clearInterval(o),void 0!==r&&r()),e.innerHTML=e.innerHTML+t[i],i++}),void 0!==n?85:n)}}},i={};function o(e){var t=i[e];if(void 0!==t)return t.exports;var n=i[e]={exports:{}};return r[e](n,n.exports,o),n.exports}e=o(469),t=o(671),n=function(){function n(){}return n.init=function(){document.querySelector("#quote").addEventListener("click",n.setQuote),n.setQuote()},n.setQuote=function(){e.ApiService.getFact().then((function(e){var r=document.querySelector("#quote"),i=document.querySelector("#cursor");r.innerHTML="",clearInterval(n.blinkInterval),i.classList.remove("hidden"),(0,t.print)(r,e,60,(function(){n.blinkInterval=setInterval((function(){i.classList.contains("hidden")?i.classList.remove("hidden"):i.classList.add("hidden")}),500)}))}))},n}(),document.addEventListener("DOMContentLoaded",n.init)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJ1QkFBQSxFQUNBLEVBRUEsRSxvRkNIQSxxQ0FRQSxRQUxXLEVBQUFBLFFBQVAsV0FDSSxPQUFPQyxNQUFNQyxLQUFLQyxLQUNiQyxNQUFLLFNBQUFDLEdBQVksT0FBQUEsRUFBU0MsTUFBVCxJQUNqQkYsTUFBSyxTQUFBRSxHQUFRLE9BQUFBLEVBQUtDLElBQUwsR0FDdEIsRUFOTyxFQUFBSixJQUFjLG1EQU96QixDLENBUkEsRSw4RUNBQSxpQkFBc0JLLEVBQWFELEVBQWNFLEVBQVlDLEdBQ3pELElBQUlDLEVBQWdCLEVBQ2RDLEVBQWdCQyxhQUFZLFdBQzFCRixJQUFVSixFQUFLTyxPQUFTLElBQ3hCQyxjQUFjSCxRQUVHSSxJQUFiTixHQUNBQSxLQUdSRixFQUFHUyxVQUFZVCxFQUFHUyxVQUFZVixFQUFLSSxHQUNuQ0EsR0FDSixRQUFXSyxJQUFQUCxFQUFtQixHQUFLQSxFQUNoQyxDLEdDWklTLEVBQTJCLENBQUMsRUFHaEMsU0FBU0MsRUFBb0JDLEdBRTVCLElBQUlDLEVBQWVILEVBQXlCRSxHQUM1QyxRQUFxQkosSUFBakJLLEVBQ0gsT0FBT0EsRUFBYUMsUUFHckIsSUFBSUMsRUFBU0wsRUFBeUJFLEdBQVksQ0FHakRFLFFBQVMsQ0FBQyxHQU9YLE9BSEFFLEVBQW9CSixHQUFVRyxFQUFRQSxFQUFPRCxRQUFTSCxHQUcvQ0ksRUFBT0QsT0FDZixDSHRCQSxTQUNBLFNBRUEsMEJBOEJBLFFBM0JrQixFQUFBRyxLQUFkLFdBQ2tCQyxTQUFTQyxjQUFjLFVBQy9CQyxpQkFBaUIsUUFBU0MsRUFBSUMsVUFDcENELEVBQUlDLFVBQ1IsRUFFZSxFQUFBQSxTQUFmLFdBQ0ksRUFBQUMsV0FBVy9CLFVBQ05JLE1BQUssU0FBQUcsR0FDRixJQUFNeUIsRUFBUU4sU0FBU0MsY0FBYyxVQUMvQk0sRUFBU1AsU0FBU0MsY0FBYyxXQUV0Q0ssRUFBTWYsVUFBWSxHQUNsQkYsY0FBY2MsRUFBSUssZUFDbEJELEVBQU9FLFVBQVVDLE9BQU8sV0FFeEIsSUFBQUMsT0FBTUwsRUFBT3pCLEVBQU0sSUFBSSxXQUNuQnNCLEVBQUlLLGNBQWdCckIsYUFBWSxXQUN4Qm9CLEVBQU9FLFVBQVVHLFNBQVMsVUFDMUJMLEVBQU9FLFVBQVVDLE9BQU8sVUFFeEJILEVBQU9FLFVBQVVJLElBQUksU0FFN0IsR0FBRyxJQUNQLEdBQ0osR0FDUixFQUNKLEVBOUJBLEdBZ0NBYixTQUFTRSxpQkFBaUIsbUJBQW9CQyxFQUFJSixLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdXNlbGVzc2ZhY3RzLy4vYXNzZXRzL3RzL2FwcC50cyIsIndlYnBhY2s6Ly91c2VsZXNzZmFjdHMvLi9hc3NldHMvdHMvYXBpLnNlcnZpY2UudHMiLCJ3ZWJwYWNrOi8vdXNlbGVzc2ZhY3RzLy4vYXNzZXRzL3RzL3ByaW50LnRzIiwid2VicGFjazovL3VzZWxlc3NmYWN0cy93ZWJwYWNrL2Jvb3RzdHJhcCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcGlTZXJ2aWNlIH0gZnJvbSAnLi9hcGkuc2VydmljZSc7XHJcbmltcG9ydCB7IHByaW50IH0gZnJvbSAnLi9wcmludCc7XHJcblxyXG5jbGFzcyBBcHAge1xyXG4gICAgcHJpdmF0ZSBzdGF0aWMgYmxpbmtJbnRlcnZhbDogTm9kZUpTLlRpbWVyO1xyXG4gICAgXHJcbiAgICBwdWJsaWMgc3RhdGljIGluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgY29uc3QgcXVvdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcXVvdGUnKTtcclxuICAgICAgICBxdW90ZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIEFwcC5zZXRRdW90ZSk7XHJcbiAgICAgICAgQXBwLnNldFF1b3RlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzdGF0aWMgc2V0UXVvdGUoKTogdm9pZCB7XHJcbiAgICAgICAgQXBpU2VydmljZS5nZXRGYWN0KClcclxuICAgICAgICAgICAgLnRoZW4odGV4dCA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBxdW90ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNxdW90ZScpO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgY3Vyc29yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2N1cnNvcicpO1xyXG5cclxuICAgICAgICAgICAgICAgIHF1b3RlLmlubmVySFRNTCA9ICcnO1xyXG4gICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChBcHAuYmxpbmtJbnRlcnZhbClcclxuICAgICAgICAgICAgICAgIGN1cnNvci5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKTtcclxuXHJcbiAgICAgICAgICAgICAgICBwcmludChxdW90ZSwgdGV4dCwgNjAsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBBcHAuYmxpbmtJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGN1cnNvci5jbGFzc0xpc3QuY29udGFpbnMoJ2hpZGRlbicpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJzb3IuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJzb3IuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LCA1MDApXHJcbiAgICAgICAgICAgICAgICB9KTsgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgQXBwLmluaXQpOyIsImV4cG9ydCBjbGFzcyBBcGlTZXJ2aWNlIHtcclxuICAgIHN0YXRpYyBVUkw6IHN0cmluZyA9ICdodHRwczovL3VzZWxlc3NmYWN0cy5qc3BoLnBsL2FwaS92Mi9mYWN0cy9yYW5kb20nO1xyXG5cclxuICAgIHN0YXRpYyBnZXRGYWN0KCk6IFByb21pc2U8YW55PiB7XHJcbiAgICAgICAgcmV0dXJuIGZldGNoKHRoaXMuVVJMKVxyXG4gICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5qc29uKCkpXHJcbiAgICAgICAgICAgIC50aGVuKGpzb24gPT4ganNvbi50ZXh0KTtcclxuICAgIH1cclxufSIsImV4cG9ydCBmdW5jdGlvbiBwcmludChlbDogRWxlbWVudCwgdGV4dDogc3RyaW5nLCBtcz86bnVtYmVyLCBjYWxsYmFjaz86IGFueSkge1xyXG4gICAgbGV0IGluZGV4OiBudW1iZXIgPSAwO1xyXG4gICAgY29uc3QgcHJpbnRJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcclxuICAgICAgICBpZiAoaW5kZXggPT09IHRleHQubGVuZ3RoIC0gMSkge1xyXG4gICAgICAgICAgICBjbGVhckludGVydmFsKHByaW50SW50ZXJ2YWwpO1xyXG5cclxuICAgICAgICAgICAgaWYgKGNhbGxiYWNrICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWwuaW5uZXJIVE1MID0gZWwuaW5uZXJIVE1MICsgdGV4dFtpbmRleF07XHJcbiAgICAgICAgaW5kZXgrKztcclxuICAgIH0sIChtcyAhPT0gdW5kZWZpbmVkID8gODUgOiBtcykpO1xyXG59IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiJdLCJuYW1lcyI6WyJnZXRGYWN0IiwiZmV0Y2giLCJ0aGlzIiwiVVJMIiwidGhlbiIsInJlc3BvbnNlIiwianNvbiIsInRleHQiLCJlbCIsIm1zIiwiY2FsbGJhY2siLCJpbmRleCIsInByaW50SW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsImxlbmd0aCIsImNsZWFySW50ZXJ2YWwiLCJ1bmRlZmluZWQiLCJpbm5lckhUTUwiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImluaXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJhZGRFdmVudExpc3RlbmVyIiwiQXBwIiwic2V0UXVvdGUiLCJBcGlTZXJ2aWNlIiwicXVvdGUiLCJjdXJzb3IiLCJibGlua0ludGVydmFsIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwicHJpbnQiLCJjb250YWlucyIsImFkZCJdLCJzb3VyY2VSb290IjoiIn0=